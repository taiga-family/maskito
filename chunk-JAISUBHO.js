import{a as u}from"./chunk-AA6TEIDG.js";import{H as p,o as c,y as d}from"./chunk-FESCGWUI.js";import"./chunk-6QOZUR2C.js";import"./chunk-DRW3Z7S4.js";import"./chunk-D6FC3ZWN.js";import{Eb as l,Mb as i,Nb as t,Ob as a,dc as e,hb as m,sb as s}from"./chunk-BRMP23IT.js";import"./chunk-6M32EY24.js";var n=class n{constructor(){this.utilityInActionDemo=import("./chunk-45WPKW5C.js")}};n.\u0275fac=function(o){return new(o||n)},n.\u0275cmp=s({type:n,selectors:[["transformer-doc-page"]],decls:31,vars:1,consts:[["header","Transformer","package","CORE"],[1,"tui-space_top-0"],["size","m"],[3,"code"]],template:function(o,g){o&1&&(i(0,"tui-doc-page",0)(1,"section")(2,"p",1)(3,"strong"),e(4,"Maskito"),t(),e(5," libraries were created to prevent user from typing invalid value. "),a(6,"br"),i(7,"strong"),e(8,"Maskito"),t(),e(9," listens "),i(10,"code"),e(11,"beforeinput"),t(),e(12," and "),i(13,"code"),e(14,"input"),t(),e(15," events. Programmatic (by developer) changes of input's value don't trigger these events! "),t(),i(16,"tui-notification",2)(17,"div")(18,"strong"),e(19,"Maskito"),t(),e(20," is based on the assumption that developer is capable to programmatically patch input with "),i(21,"u"),e(22,"valid"),t(),e(23," value! "),t()(),i(24,"p"),e(25," If you need to programmatically patch input's value but you are not sure that your value is valid (for example, you get it from the server), you should use "),i(26,"code"),e(27,"maskitoTransform"),t(),e(28," utility . "),t()(),a(29,"tui-doc-code",3)(30,"next-steps"),t()),o&2&&(m(29),l("code",g.utilityInActionDemo))},dependencies:[u,d,p,c],encapsulation:2,changeDetection:0});var r=n;export{r as default};
