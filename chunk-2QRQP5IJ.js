import{a as Q,b as U,c as X}from"./chunk-WYDMTEF6.js";import{a as K}from"./chunk-AA6TEIDG.js";import{E as G,H as J,a as $,n as z}from"./chunk-FESCGWUI.js";import{$ as _,Ab as w,Cb as P,Db as N,Eb as I,lb as h,ob as v,ya as g}from"./chunk-6QOZUR2C.js";import{a as q,b as L}from"./chunk-DRW3Z7S4.js";import"./chunk-D6FC3ZWN.js";import{Ad as f,Eb as r,Fb as c,Gd as x,Mb as i,Nb as t,Ob as l,Wb as V,cc as O,dc as e,hb as m,hc as E,ic as k,jc as S,sb as p,sc as b,wd as u,yb as C}from"./chunk-BRMP23IT.js";import"./chunk-6M32EY24.js";var re={mask:/^[^а-яё]+$/i,overwriteMode:({value:d})=>/^\d+$/.test(d)?"replace":"shift"},Y=re;var y=class y{constructor(){this.maskitoOptions=Y;this.initialValue='This artificial example demonstrates the usage of dynamic mode. If this textarea contains only digits \u2014 "replace" mode is enabled. Otherwise, "shift" mode is enabled.'}};y.\u0275fac=function(o){return new(o||y)},y.\u0275cmp=p({type:y,selectors:[["overwrite-mode-dynamic-doc-example-3"]],decls:2,vars:6,consts:[[3,"expandable","ngModel","tuiTextfieldLabelOutside"],["tuiTextfieldLegacy","",3,"maskito"]],template:function(o,n){o&1&&(i(0,"tui-textarea",0),l(1,"textarea",1),t()),o&2&&(c("max-width",20,"rem"),r("expandable",!0)("ngModel",n.initialValue)("tuiTextfieldLabelOutside",!0),m(),r("maskito",n.maskitoOptions))},dependencies:[x,u,f,g,X,Q,U,w,v,h],encapsulation:2,changeDetection:0});var R=y;var ae={mask:/^\d+$/,overwriteMode:"replace"},ie=ae;var M=class M{constructor(){this.maskitoOptions=ie;this.value="0000"}};M.\u0275fac=function(o){return new(o||M)},M.\u0275cmp=p({type:M,selectors:[["overwrite-mode-replace-doc-example-2"]],decls:2,vars:5,consts:[["tuiHintContent","Insert character somewhere in the middle",3,"ngModelChange","tuiTextfieldLabelOutside","ngModel"],["inputmode","decimal","tuiTextfieldLegacy","",3,"maskito"]],template:function(o,n){o&1&&(i(0,"tui-input",0),S("ngModelChange",function(s){return k(n.value,s)||(n.value=s),s}),l(1,"input",1),t()),o&2&&(c("max-width",20,"rem"),r("tuiTextfieldLabelOutside",!0),E("ngModel",n.value),m(),r("maskito",n.maskitoOptions))},dependencies:[x,u,f,g,_,I,P,N,w,v,h],encapsulation:2,changeDetection:0});var F=M;var le={mask:/^\d+$/,overwriteMode:"shift"},oe=le;var T=class T{constructor(){this.maskitoOptions=oe;this.value="0000"}};T.\u0275fac=function(o){return new(o||T)},T.\u0275cmp=p({type:T,selectors:[["overwrite-mode-shift-doc-example-1"]],decls:2,vars:5,consts:[["tuiHintContent","Insert character somewhere in the middle",3,"ngModelChange","tuiTextfieldLabelOutside","ngModel"],["inputmode","decimal","tuiTextfieldLegacy","",3,"maskito"]],template:function(o,n){o&1&&(i(0,"tui-input",0),S("ngModelChange",function(s){return k(n.value,s)||(n.value=s),s}),l(1,"input",1),t()),o&2&&(c("max-width",20,"rem"),r("tuiTextfieldLabelOutside",!0),E("ngModel",n.value),m(),r("maskito",n.maskitoOptions))},dependencies:[x,u,f,g,_,I,P,N,w,v,h],encapsulation:2,changeDetection:0});var H=T;function se(d,a){d&1&&(e(0," The classic mode that everyone is used to. Inserting a new character in the middle of the text field value "),i(1,"strong"),e(2,"shifts"),t(),e(3," all following characters to the right. "))}function de(d,a){d&1&&(e(0," All new inserted characters "),i(1,"strong"),e(2,"replace"),t(),e(3," the old characters at the same position. No character shifts. The length of the value remains the same after inserting new character somewhere in middle of the text field. "))}function pe(d,a){if(d&1&&(e(0," Parameter "),i(1,"code"),e(2,"overwriteMode"),t(),e(3," also accepts function that will called before each insertion of new characters. This function has one argument \u2014 current element state (read more about it in the "),i(4,"a",10),e(5,' "Element\xA0state" '),t(),e(6," section). And this function should return one of two possible values: "),i(7,"code"),e(8,"shift"),t(),e(9," or "),i(10,"code"),e(11,"replace"),t(),e(12," . ")),d&2){let o=V();m(4),r("routerLink",o.elementStateDocPage)}}var D=class D{constructor(){this.shiftExample={[L.MaskitoOptions]:import("./chunk-X3U7B6KY.js")};this.replaceExample={[L.MaskitoOptions]:import("./chunk-J4AYPIQO.js")};this.dynamicExample={[L.MaskitoOptions]:import("./chunk-WCPWMC2G.js")};this.elementStateDocPage=`/${q.ElementState}`}};D.\u0275fac=function(o){return new(o||D)},D.\u0275cmp=p({type:D,selectors:[["overwrite-mode-doc-page"]],decls:38,vars:6,consts:[["shiftModeDescription",""],["replaceModeDescription",""],["dynamicModeDescription",""],["header","Overwrite mode"],[1,"tui-space_top-0"],[1,"tui-list"],[1,"tui-list__item"],["id","shift","heading","Shift mode",3,"content","description"],["id","replace","heading","Replace mode",3,"content","description"],["id","dynamic","heading","Dynamically detected mode",3,"content","description"],["tuiLink","",3,"routerLink"]],template:function(o,n){if(o&1&&(i(0,"tui-doc-page",3)(1,"p",4)(2,"strong"),e(3,"Overwrite mode"),t(),e(4," regulates behaviour of the mask when user inserts a new character somewhere in the middle of text field, overwriting the character at the current index. "),t(),i(5,"section")(6,"p")(7,"code"),e(8,"overwriteMode"),t(),e(9," can be of a following type: "),t(),i(10,"ul",5)(11,"li",6)(12,"code"),e(13,"shift"),t(),e(14," (default) "),t(),i(15,"li",6)(16,"code"),e(17,"replace"),t()(),i(18,"li",6),e(19," function that receives element state as an argument and returns "),i(20,"code"),e(21,"shift"),t(),e(22," or "),i(23,"code"),e(24,"replace"),t()()()(),i(25,"tui-doc-example",7),C(26,se,4,0,"ng-template",null,0,b),l(28,"overwrite-mode-shift-doc-example-1"),t(),i(29,"tui-doc-example",8),C(30,de,4,0,"ng-template",null,1,b),l(32,"overwrite-mode-replace-doc-example-2"),t(),i(33,"tui-doc-example",9),C(34,pe,13,1,"ng-template",null,2,b),l(36,"overwrite-mode-dynamic-doc-example-3"),t(),l(37,"next-steps"),t()),o&2){let W=O(27),s=O(31),ne=O(35);m(25),r("content",n.shiftExample)("description",W),m(4),r("content",n.replaceExample)("description",s),m(4),r("content",n.dynamicExample)("description",ne)}},dependencies:[K,H,F,R,$,G,J,z],encapsulation:2,changeDetection:0});var B=D;export{B as default};
