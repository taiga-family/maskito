name: Create release

on:
  workflow_dispatch:
    inputs:
      mode:
        type: choice
        description: release type
        required: true
        default: 'minor'
        options:
          - patch
          - minor
          - prerelease
          - major
      dryRun:
        type: boolean
        required: false
        description: --dry-run

jobs:
  run-release:
    name: Run release
    runs-on: ubuntu-latest
    env:
      IS_DRY_MODE: ${{ github.event.inputs.dryRun == 'true' }}
    steps:
      - name: Fetch from origin repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}
          token: ${{ secrets.TAIGA_FAMILY_BOT_PAT }}

      - name: Setup Node.js and Cache
        uses: taiga-family/ci/actions/setup-node@1.9.2

      - name: Run release
        id: run-release
        run: |
          git config --global user.name "tinkoff-bot"
          git config --global user.email "tinkoff-bot@tinkoff.ru"
          git config --global push.followTags true

          npm run release -- \
            --release-as ${{ github.event.inputs.mode }} \
            --dry-run ${{ github.event.inputs.dryRun }}

          echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate Release Body
        id: generate_body
        run: |
          npx extract-changelog-release > RELEASE_BODY.md
          echo "tag_name=$(git describe HEAD --abbrev=0)" >> $GITHUB_OUTPUT

      - id: get-pr-body
        run: |
          body=$(cat RELEASE_BODY.md)
          delimiter="$(openssl rand -hex 8)"
          echo "body<<$delimiter" >> $GITHUB_OUTPUT
          echo "$body" >> $GITHUB_OUTPUT
          echo "$delimiter" >> $GITHUB_OUTPUT

      - name: Debug body of pull request in dry mode
        if: ${{ env.IS_DRY_MODE == 'true' }}
        run: echo "${{ steps.get-pr-body.outputs.body }}"

      - name: Debug variables
        if: ${{ env.IS_DRY_MODE == 'true' }}
        run: |
          echo "${{ steps.generate_body.outputs.tag_name }}"
          echo "release/${{ steps.run-release.outputs.new_version }}"
          echo "${{ steps.get-pr-body.outputs.body }}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v5
        if: ${{ env.IS_DRY_MODE == 'false' }}
        with:
          delete-branch: true
          token: ${{ secrets.TAIGA_FAMILY_BOT_PAT }}
          branch: release/${{ steps.run-release.outputs.new_version }}
          title: 'ðŸš€ Release/v${{ steps.run-release.outputs.new_version }}'
          body: |
            ${{ steps.get-pr-body.outputs.body }}

            ---

            > **DO NOT SQUASH OR REBASE ME**

            > if user merges this PR via rebasing or using squash, it will cause lost of the tag. It happens because tag is already
            > attached to the initial release commit SHA. If we use rebase or squash, the commit sha changes and already created tag
            > points to not-existing commit.

      - name: Create GitHub Release
        if: ${{ env.IS_DRY_MODE == 'false' }}
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ steps.generate_body.outputs.tag_name }}
          tag: ${{ steps.generate_body.outputs.tag_name }}
          bodyFile: 'RELEASE_BODY.md'
          token: ${{ secrets.GITHUB_TOKEN }}

concurrency:
  group: create-release-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true
